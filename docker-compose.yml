version: '3.7'

networks:
  network:
    driver: bridge

# VOLUMES
volumes:
  vol_backend:
    driver_opts:
      device: ./backend
      o: bind
      type: none
  vol_frontend:
    driver_opts:
      device: ./frontend
      o: bind
      type: none
  vol_sql:
    driver_opts:
      device: ./data/sql
      o: bind
      type: none
  vol_pgadmin:
    driver_opts:
      device: ./data/pgadmin
      o: bind
      type: none
  vol_mysql:
    driver_opts:
      device: ./data/mysql
      o: bind
      type: none
  vol_myadmin:
    driver_opts:
      device: ./data/myadmin
      o: bind
      type: none

#NESTJS
services:
  nestjs:
    container_name: nestjs
    image: node:lts
    command: bash -c "cd /backend && npm install && npm run start:dev"
    ports:
      - "3000:3000"
      - "9229:9229" #debugging port ?
    restart: always
    networks:
      - network
    volumes:
      - vol_backend:/backend

  vue:
    container_name: vue
    build:
      context: ./frontend
    ports:
      - "8080:8080"
    networks:
      - network
    volumes:
      - vol_frontend:/frontend
    depends_on:
      - nestjs

  swagger:
    container_name: swagger
    image: swaggerapi/swagger-ui
    environment:
      SWAGGER_JSON_URL: http://localhost:3000/api-docs-json
      BASE_URL: /swagger
      PORT: 8080
    ports:
      - "9090:8080"
    restart: always
    networks:
      - network
    depends_on:
      - nestjs

# #POSTGRESQL
  postgresql:
    container_name: postgresql
    image: postgres:latest
    env_file: .env
    restart: always
    networks:
      - network
    volumes:
      - vol_sql:/var/lib/postgresql/data

# #PHPMYADMIN
  phppgadmin:
    container_name: phppgadmin
    image: dpage/pgadmin4
    env_file: .env
    ports:
      - "5050:80"
    restart: always
    networks:
      - network
    volumes:
      - vol_pgadmin:/var/lib/pgadmin
    depends_on:
      - postgresql

# #ADMINER
  # adminer:
  #   container_name: adminer
  #   image: adminer:latest
  #   env_file: .env
  #   ports:
  #     - "8080:8080"
  #   restart: always
  #   networks:
  #     - network
  #   depends_on:
  #     - postgresql
