version: '3.9'

networks:
  network:
    driver: bridge

# VOLUMES
volumes:
  vol_backend:
    driver_opts:
      device: ./backend
      o: bind
      type: none
  vol_sql:
    driver_opts:
      device: ./data/sql
      o: bind
      type: none

#NESTJS
services:
  nestjs:
    container_name: nestjs
    image: node:lts
    command: bash -c "npm install -g @nestjs/cli && nest new -p npm . && npm run start:dev"
    ports: 
      - "3000:3000"
    restart: always
    networks:
      - network
    volumes:
      - vol_backend:/backend
    working_dir: /backend

# #POSTGRESQL
  postgresql:
    container_name: postgresql
    image: postgres:latest
    env_file: .env
    restart: always
    networks:
      - network
    volumes:
      - vol_sql:/var/lib/postgresql/data

# #ADMINER
  adminer:
    container_name: adminer
    image: adminer:latest
    env_file: .env
    ports: 
      - "8080:8080"
    restart: always
    networks:
      - network
    depends_on:
      - postgresql

# #ANGULAR
#   redis:
#     container_name: redis
#     build:
#       context: ./requirements/redis
#     env_file: .env
#     ports:
#       - "6379:6379"
#     restart: always
#     networks:
#       - network