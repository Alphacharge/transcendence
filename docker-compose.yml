version: '3.9'

networks:
  network:
    driver: bridge

# VOLUMES
volumes:
  vol_backend:
    driver_opts:
      device: ./backend
      o: bind
      type: none
  vol_frontend:
    driver_opts:
      device: ./frontend
      o: bind
      type: none
  vol_sql:
    driver_opts:
      device: ./data/sql
      o: bind
      type: none
  vol_pgadmin:
    driver_opts:
      device: ./data/pgadmin
      o: bind
      type: none
  vol_mysql:
    driver_opts:
      device: ./data/mysql
      o: bind
      type: none
  vol_myadmin:
    driver_opts:
      device: ./data/myadmin
      o: bind
      type: none

#NESTJS
services:
  nestjs:
    container_name: nestjs
    image: node:lts
    command: bash -c "npm install -g @nestjs/cli @nestjs/swagger swagger-ui-express prisma class-validator class-transformer argon2 @prisma/client && sleep 20 &&  if [ ! -d 'prisma' ]; then npx prisma init; fi && npx prisma migrate deploy && npm run start:dev" # nest new -p npm . &&
    ports: 
      - "3000:3000"
      - "9229:9229" #debugging port ?
    restart: always
    networks:
      - network
    volumes:
      - vol_backend:/backend
    working_dir: /backend
    depends_on:
      - postgresql

  vue:
    container_name: vue
    build:
      context: ./frontend
    ports: 
      - "8080:8080"
    restart: always
    networks:
      - network
    volumes:
      - vol_frontend:/frontend
    depends_on:
      - nestjs

  swagger:
    container_name: swagger
    image: swaggerapi/swagger-ui
    environment:
      SWAGGER_JSON_URL: http://localhost:3000/api-docs-json
      BASE_URL: /swagger
      PORT: 8080
    ports: 
      - "9090:8080"
    restart: always
    networks:
      - network
    depends_on:
      - nestjs

#POSTGRESQL
  postgresql:
    container_name: postgresql
    image: postgres:latest
    env_file: .env
    ports: 
      - "5432:5432"
    restart: always
    networks:
      - network
    volumes:
      - vol_sql:/var/lib/postgresql/data

#PHPPGADMIN
  phppgadmin:
    container_name: phppgadmin
    image: dpage/pgadmin4
    env_file: .env
    ports: 
      - "5050:80"
    restart: always
    networks:
      - network
    volumes:
      - vol_pgadmin:/var/lib/pgadmin
    depends_on:
      - postgresql

# #ADMINER
  # adminer:
  #   container_name: adminer
  #   image: adminer:latest
  #   env_file: .env
  #   ports: 
  #     - "8080:8080"
  #   restart: always
  #   networks:
  #     - network
  #   depends_on:
  #     - postgresql

#   # #MYSQL
#   mysql:
#     container_name: mysql
#     image: mariadb:latest
#     environment:
#       MARIADB_ROOT_PASSWORD: example
#     ports: 
#       - "3306:3306"
#     restart: always
#     volumes:
#       - vol_mysql:/etc/mysql

# # #PHPMYADMIN
#   phpmyadmin:
#     container_name: phpmyadmin
#     image: phpmyadmin
#     environment:
#       MARIADB_ROOT_PASSWORD: example
#       MYSQL_USER: root
#       MYSQL_PASSWORD: example
#       MYSQL_HOST: mysql
#       PMA_HOST: mysql
#       PMA_PORT: 3306
#     ports: 
#       - "7070:80"
#     restart: always
#     volumes:
#       - vol_myadmin:/etc/phpmyadmin
#     depends_on:
#       - mysql